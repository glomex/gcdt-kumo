{"AWSTemplateFormatVersion": "2010-09-09", "Outputs": {"applicationName": {"Description": "Name of the CodeDeploy application", "Value": {"Ref": "unittestGcdtSupercarsToySample"}}, "FancyLoadBalancerDNSName": {"Description": "Fancy DNS Name of the created Elastic Loadbalacner", "Value": {"Ref": "ELBDNSRecord"}}, "LoadBalancerDNSName": {"Description": "DNS Name of the created Elastic Loadbalacner", "Value": {"Fn::GetAtt": ["SupercarsElasticLoadBalancer", "DNSName"]}}, "DeploymentGroup": {"Description": "Name of the CodeDeploy deployment group", "Value": {"Ref": "unittestGcdtSupercarsToySampleDg"}}, "DeploymentConfig": {"Description": "Name of the CodeDeploy deployment config", "Value": {"Ref": "unittestGcdtSupercarsToySampleConfig"}}}, "Resources": {"unittestGcdtSupercarsToySampleConfig": {"Type": "AWS::CodeDeploy::DeploymentConfig", "Properties": {"MinimumHealthyHosts": {"Type": "HOST_COUNT", "Value": 0}, "DeploymentConfigName": "CodeDeployDefaultTemplate.AllAtOnceSupercarsToySample"}}, "ScaleDown1": {"Type": "AWS::AutoScaling::ScalingPolicy", "Properties": {"ScalingAdjustment": "-1", "Cooldown": "180", "AutoScalingGroupName": {"Ref": "SupercarsAutoscalingGroup"}, "AdjustmentType": "ChangeInCapacity"}}, "EC2Basics": {"Type": "Custom::EC2Basics", "Properties": {"StackName": {"Ref": "BaseStackName"}, "ServiceToken": {"Ref": "LambdaLookupARN"}}}, "CodedeployCodedeploytrustrole": {"Type": "AWS::IAM::Role", "Properties": {"Path": "/", "AssumeRolePolicyDocument": {"Version": "2012-10-17", "Statement": [{"Action": ["sts:AssumeRole"], "Effect": "Allow", "Principal": {"Service": ["codedeploy.us-east-1.amazonaws.com", "codedeploy.us-west-2.amazonaws.com", "codedeploy.eu-west-1.amazonaws.com", "codedeploy.ap-southeast-2.amazonaws.com"]}}]}}}, "InstanceRoleSupercarsServiceSupercarsToySample": {"Type": "AWS::IAM::InstanceProfile", "Properties": {"Roles": [{"Ref": "InstanceRoleSupercarsSupercarstoysampleInstance"}]}}, "unittestGcdtSupercarsToySample": {"Type": "AWS::CodeDeploy::Application"}, "ELBDNSRecord": {"Type": "AWS::Route53::RecordSet", "Properties": {"Comment": "fancy CNAME to the elastic LoadBalancer", "Name": {"Fn::Join": ["", [{"Ref": "ELBDNSName"}, "-", {"Ref": "AWS::Region"}, ".", {"Ref": "HostedZone"}, "."]]}, "HostedZoneName": {"Fn::Join": ["", [{"Ref": "HostedZone"}, "."]]}, "ResourceRecords": [{"Fn::GetAtt": ["SupercarsElasticLoadBalancer", "DNSName"]}], "TTL": "900", "Type": "CNAME"}}, "InstanceRoleInstancerolepoliciesPolicy": {"Type": "AWS::IAM::Policy", "Properties": {"PolicyName": "InstanceRoleInstancerolepoliciesPolicy", "PolicyDocument": {"Version": "2012-10-17", "Statement": [{"Action": ["autoscaling:Describe*", "cloudformation:Describe*", "cloudformation:GetTemplate", "s3:Get*"], "Resource": "*", "Effect": "Allow"}, {"Action": ["logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents", "logs:DescribeLogStreams"], "Resource": ["arn:aws:logs:*:*:*"], "Effect": "Allow"}]}, "Roles": [{"Ref": "InstanceRoleSupercarsSupercarstoysampleInstance"}]}}, "SupercarsAutoscalingGroup": {"Type": "AWS::AutoScaling::AutoScalingGroup", "Properties": {"Tags": [{"Value": "supercars-SupercarsToySample-frontend", "PropagateAtLaunch": true, "Key": "Name"}], "LaunchConfigurationName": {"Ref": "LaunchConfiguration"}, "MinSize": {"Ref": "ScaleMinCapacity"}, "MaxSize": {"Ref": "ScaleMaxCapacity"}, "VPCZoneIdentifier": {"Fn::GetAtt": ["EC2Basics", "subnet_ids"]}, "LoadBalancerNames": [{"Ref": "SupercarsElasticLoadBalancer"}], "MetricsCollection": [{"Metrics": ["GroupMinSize", "GroupMaxSize", "GroupDesiredCapacity", "GroupInServiceInstances", "GroupPendingInstances", "GroupStandbyInstances", "GroupTerminatingInstances", "GroupTotalInstances"], "Granularity": "1Minute"}], "HealthCheckType": "EC2"}, "UpdatePolicy": {"AutoScalingRollingUpdate": {"PauseTime": "PT1M", "WaitOnResourceSignals": "false", "MaxBatchSize": "5", "MinInstancesInService": "1"}}}, "SupercarsToySampleFrontendWeb": {"Type": "AWS::EC2::SecurityGroup", "Properties": {"SecurityGroupIngress": [{"SourceSecurityGroupId": {"Ref": "SupercarsToySampleFrontendELB"}, "FromPort": 8080, "ToPort": 8080, "IpProtocol": "tcp"}], "VpcId": {"Ref": "VPCId"}, "GroupDescription": "SupercarsToySampleWebServerSecurityGroup"}}, "InstanceRoleSupercarsSupercarstoysampleInstance": {"Type": "AWS::IAM::Role", "Properties": {"Path": "/ec2/", "ManagedPolicyArns": [{"Ref": "DefaultInstancePolicyARN"}], "AssumeRolePolicyDocument": {"Version": "2012-10-17", "Statement": [{"Action": ["sts:AssumeRole"], "Effect": "Allow", "Principal": {"Service": ["ec2.amazonaws.com"]}}]}}}, "SupercarsToySampleFrontendELB": {"Type": "AWS::EC2::SecurityGroup", "Properties": {"SecurityGroupIngress": [{"ToPort": 80, "FromPort": 80, "IpProtocol": "tcp", "CidrIp": "0.0.0.0/0"}, {"ToPort": 443, "FromPort": 443, "IpProtocol": "tcp", "CidrIp": "0.0.0.0/0"}], "VpcId": {"Ref": "VPCId"}, "GroupDescription": "SupercarsToySampleLoadBalancerSecurityGroup"}}, "unittestGcdtSupercarsToySampleDg": {"Type": "AWS::CodeDeploy::DeploymentGroup", "Properties": {"ApplicationName": {"Ref": "unittestGcdtSupercarsToySample"}, "AutoScalingGroups": [{"Ref": "SupercarsAutoscalingGroup"}], "ServiceRoleArn": {"Fn::GetAtt": ["CodedeployCodedeploytrustrole", "Arn"]}, "DeploymentConfigName": {"Ref": "unittestGcdtSupercarsToySampleConfig"}}}, "ScaleUp1": {"Type": "AWS::AutoScaling::ScalingPolicy", "Properties": {"ScalingAdjustment": "3", "Cooldown": "60", "AutoScalingGroupName": {"Ref": "SupercarsAutoscalingGroup"}, "AdjustmentType": "ChangeInCapacity"}}, "SupercarsElasticLoadBalancer": {"Type": "AWS::ElasticLoadBalancing::LoadBalancer", "Properties": {"ConnectionDrainingPolicy": {"Enabled": true, "Timeout": 300}, "Subnets": {"Fn::GetAtt": ["EC2Basics", "subnet_ids"]}, "HealthCheck": {"HealthyThreshold": "3", "Interval": "25", "Target": {"Fn::Join": ["", ["HTTP:", "8080", "/health_check"]]}, "Timeout": "15", "UnhealthyThreshold": "5"}, "Listeners": [{"InstancePort": "8080", "LoadBalancerPort": "80", "Protocol": "HTTP"}, {"InstancePort": "8080", "SSLCertificateId": {"Fn::Join": ["", ["arn:aws:iam::", {"Ref": "AWS::AccountId"}, ":server-certificate/cloudfront/2016/wildcard.infra.glomex.cloud-2016-3"]]}, "LoadBalancerPort": "443", "Protocol": "HTTPS", "InstanceProtocol": "HTTP"}], "CrossZone": "true", "SecurityGroups": [{"Ref": "SupercarsToySampleFrontendELB"}]}}, "CodedeployCodedeployrolepoliciesPolicy": {"Type": "AWS::IAM::Policy", "Properties": {"PolicyName": "CodedeployCodedeployrolepoliciesPolicy", "PolicyDocument": {"Version": "2012-10-17", "Statement": [{"Action": ["ec2:Describe*"], "Resource": ["*"], "Effect": "Allow"}, {"Action": ["autoscaling:CompleteLifecycleAction", "autoscaling:DeleteLifecycleHook", "autoscaling:DescribeLifecycleHooks", "autoscaling:DescribeAutoScalingGroups", "autoscaling:PutLifecycleHook", "autoscaling:RecordLifecycleActionHeartbeat"], "Resource": ["*"], "Effect": "Allow"}]}, "Roles": [{"Ref": "CodedeployCodedeploytrustrole"}]}}, "LaunchConfiguration": {"Type": "AWS::AutoScaling::LaunchConfiguration", "Properties": {"UserData": {"Fn::Base64": {"Fn::Join": ["", ["#!/bin/bash\n", {"Fn::Join": ["", ["/usr/local/bin/pubkeysync org_team_ops\n"]]}]]}}, "ImageId": {"Ref": "AMI"}, "BlockDeviceMappings": [{"DeviceName": "/dev/xvda", "Ebs": {"DeleteOnTermination": "true", "VolumeType": "gp2", "VolumeSize": 8}}], "SecurityGroups": [{"Ref": "SupercarsToySampleFrontendWeb"}, {"Fn::GetAtt": ["EC2Basics", "CfOut_EC2SecuritySSHPlusServerOpenVPN"]}], "IamInstanceProfile": {"Ref": "InstanceRoleSupercarsServiceSupercarsToySample"}, "InstanceType": {"Ref": "InstanceType"}}}}, "Description": "gcdt sample stack", "Parameters": {"AMI": {"Type": "String", "Description": "Machine image to use (AMI)"}, "LambdaLookupARN": {"Type": "String", "Description": "The ARN of the operations lambda to lookup stack outputs"}, "DefaultInstancePolicyARN": {"Type": "String", "Description": "A base policys ARN you could attach to all of your instances when required. This handles several default use cases."}, "ScaleMinCapacity": {"Default": "1", "Type": "String", "Description": "Number of api servers to run"}, "ScaleMaxCapacity": {"Default": "5", "Type": "String", "Description": "Number of api servers to run"}, "VPCId": {"Type": "String", "Description": "ID of glomex default VPC"}, "HostedZone": {"Type": "String", "Description": "Name of the hosted Zone (without trailing dot)"}, "BaseStackName": {"Type": "String", "Description": "Name of the BaseStack to Lookup Outputs"}, "ELBDNSName": {"Type": "String", "ConstraintDescription": "must comply the following schema (excluding the domain part): <projekt>-<funktion><counter|instance-id>-<stage>[-<region>][-int|-ext].[mep|mdp|vvp|dp|infra].glomex.cloud For example adpxy-elb", "Description": "Host part of the Elastic Loadbalancer which is used for the fancy hostname. The name of the hosted zone shall not be included"}, "InstanceType": {"Default": "t2.micro", "Type": "String", "Description": "Type of EC2 instance"}}}